<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[网络协议-ICMP]]></title>
    <url>%2F2018%2F01%2F16%2F%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-ICMP%2F</url>
    <content type="text"><![CDATA[ICMP引言产生背景ICMP为了补偿IP的缺陷而设计的。ICMP提供路由器报告错误，提供主机测试目的端是否能到达。 概述ICMP是Internet控制消息协议的缩写，属于网络层协议。ICMP只能报告差错，不能纠正差错。 ICMP的封装 ICMP报文不直接传给链路层，而是封装成IP数据报，再传给数据链路层。 ICMP总是把差错报文给最初的数据源，而不是通知中间服务器。 ICMP差错和查询报文 ICMPv6版本4和版本6的比较 在版本4中的ICMP，ARP和IGMP合并成一个协议ICMPv6。]]></content>
      <categories>
        <category>网络协议</category>
      </categories>
      <tags>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网络协议-底层技术]]></title>
    <url>%2F2018%2F01%2F15%2F%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE-%E5%BA%95%E5%B1%82%E6%8A%80%E6%9C%AF%2F</url>
    <content type="text"><![CDATA[有线局域网以太网（Ethernet） 以太网发送的分组称为帧，每个帧含有7个字段：前同步码、帧首定界符、目标地址、源地址、长度/类型、数据和填充、FCS(CRC)。 以太网不提供任何机制来确定收到的帧，所以以太网是一种被称为不可靠的媒体。 以太网帧长度最小为64bytes(512bits)，最大为1518bytes(12,144bits)。 802.3和802.2 IEEE 正式的标准，它由Ethernet V2发展而来。它将Ethernet V2帧头的协议类型字段替换为帧长度字段(取值为0x0000-0x05dc（十进制1500）)；并加入802.2 LLC头用以标志上层协议。 以太网提供的服务对应于OSI模型的第一层和第二层，而802.3提供的服务对应于OSI模型的第一层和第二层的信道访问部分（即第二层的一部分）。 实际环境中大多数TCP/IP设备都使用Ethernet V2格式帧。考虑到与其他设备的兼容性，802.3标准并没有如预期那样得到普及。 802.2帧格式 DSAP：目的服务访问点，指出要到达网络层中的协议。类似以太网v2中的类型字段。 SSAP：源服务访问点 控制：用于流量控制等。 以太网类型 无线局域网无线局域网技术 IEEE 802.11 无线局域网 蓝牙，一种小型无线局域网的技术 Zigbee 点到点广域网PPP PPP只有物理层和数据链路层。PPP没有为物理层定义特定的协议，实施者自行选择。在数据链路层，PPP定义了帧的格式，以及用来控制链路和传送用户数据的协议。 根据PPP承载的是数据信息还是控制信息，PPP协议的帧分为3种格式： PPP信息帧、PPP链路控制帧和PPP网络控制帧。 以太网上的PPP（PPP over Ethernet，PPPoE）是一个新的协议，它使用一种发现技术来找出需要连接因特网的主机的以太网地址。在这个地址被发现后，就可以使用PPP会话提供连接。 HDLCHDLC的类型HDLC是一个在同步网上点对点的传输数据，面向比特的数据链路层协议，其帧结构有两种类型： 一种是ISO HDLC帧结构，它由IBM SDLC协议演化过来，采用SDLC的帧格式，支持同步，全双工操作，分为物理层及LLC 两个子层。 一种是Cisco HDLC帧结构，采用SDLC的帧格式，无LLC子层，从而Cisco HDLC对上层数据只进行物理帧封装，没有应答、重传机制，所有的纠错处理由上层协议处理。具有效率高、实现简单的特点，因此，被作为Cisco路由器的默认协议，用于实现Cisco路由器之间的远程连接。 HDLC帧结构 面向比特，标志字段01111110 零比特填充法，防止数据信息干扰标志字段交换广域网ATM异步传输方式(Asynchronous Transfer Mode，ATM）是ATM论坛设计，并被ITU-T采纳的信元中继协议。]]></content>
      <categories>
        <category>网络协议</category>
      </categories>
      <tags>
        <tag>网络协议</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代码大全-表驱动法]]></title>
    <url>%2F2017%2F11%2F08%2F%E4%BB%A3%E7%A0%81%E5%A4%A7%E5%85%A8-%E8%A1%A8%E9%A9%B1%E5%8A%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[什么是表驱动法？表驱动法是一种编程模式 ———— 从表里查找信息而不使用逻辑判断语句。所有能够用逻辑判断语句来选择的事物，都可以使用查表来解决。表驱动法可以在复杂逻辑判断中使用。 使用表驱动法的两个问题怎样从表中查询条目（如何设定表头也就是键）？ 直接访问 索引访问 阶梯访问 应该在表里面存些什么（如何设定表的内容也就是值）？ 数据 描述动作的代码 对实现动作的子程序的引用 直接访问表 直接访问表代替了更为复杂的逻辑控制结构。无需绕圈子就能直接在表里面找到想要的信息。直接访问表主要的问题就是确定查询键值，有以下三种情况： 复制信息从而能够直接使用键值 转换键值以使其能够直接使用 把键值转换提取成独立子程序 索引访问表 索引访问表的使用情景主要是有时候，只用一个简单的数学运算还无法把数据转换成表键值，这类情况的一部分可以通过使用索引访问的方法。索引表不是直接访问，而是经过居间的索引去访问。 索引访问的优点 如果主查询表中的每一条记录都很大，那么创建一个浪费了很多空间的索引数组所用的空间，要比创建一个浪费了很多空间的主查询所有的空间要小得多 即使用了索引后没有节省内存空间，操作位于索引中的记录也要比操作位于主表中的记录更方便廉价 表查询技术在可维护性上具有的普遍优点，编写到表里面的数据比嵌入代码中的数据更容易维护 阶梯访问表 阶梯结构的基本想法是表中的记录对于不同的数据范围有效，而不是对不同的数据点有效。这种方法不像索引结构直接，但是要比索引访问节省空间。 使用阶梯技术时要注意的细节： 留心断点 确认循环能在找出最高一级的区间之后恰当的终止，同时确保正确地处理了两边的边界 考虑使用二分法查找取代顺序查找 阶梯访问大列表时顺序查找可能会比较耗时，可以采用二分的方法来提高效率 考虑用索引访问来取代阶梯技术 阶梯方法中的查找操作可能会比较耗时，如果执行速度更重要，可以考虑使用索引访问取代阶梯访问。]]></content>
      <categories>
        <category>读书笔记</category>
        <category>代码大全</category>
        <category>表驱动法</category>
      </categories>
      <tags>
        <tag>代码大全</tag>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[七牛云回调鉴权问题]]></title>
    <url>%2F2017%2F11%2F06%2F%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%9E%E8%B0%83%E9%89%B4%E6%9D%83%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述使用七牛云存储遇到了很多坑，比如这个回调鉴权就废了很多时间，特此记录。七牛的回调鉴权主要是通过在请求头上中一个 AUTHORIZATION 的字段中的值来与本地生成的签名生成的值进行比对，如果相同，认证通过。HTTP协议中的 Authorization 请求消息头含有服务器用于验证用户代理身份的凭证，通常会在服务器返回401 Unauthorized 状态码以及WWW-Authenticate 消息头之后在后续请求中发送此消息头。 MDN web docs但是，在业务服务器上使用 $_SERVER[‘HTTP_AUTHORIZATION’] 总是获取不到这个字段的内容，通过提交工单和搜索相关问题发现好像是Apache配置的问题。 解决方案开启Apache配置中的rewrite，然后在入口目录中的.htaccess文件写入下面内容123#Authorization Headers RewriteCond %&#123;HTTP:Authorization&#125; ^(.+)$ RewriteRule .* - [E=HTTP_AUTHORIZATION:%&#123;HTTP:Authorization&#125;]]]></content>
      <tags>
        <tag>七牛云</tag>
        <tag>apache配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HEXO腾讯公益404的设置问题]]></title>
    <url>%2F2017%2F10%2F21%2Fhexo%E8%85%BE%E8%AE%AF%E5%85%AC%E7%9B%8A404%E7%9A%84%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述今天在捣鼓博客时想将404页面跳转到腾讯公益，复制next主题官网上的代码，发现在本地可以正常显示，但是当push到github上的时候，会出现样式文件无法加载的问题，next官网示例代码如下： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 问题原因在知乎上看到有人说出现该问题的原因是github个人页强制使用https协议，而上面给的代码是http的，因此无法加载样式表。 解决方法NO.1使用购买的域名指向自己的github个人主页，增加CNAME文件，然后调用公益404页面不会出现混合内容那个问题。 NO.2使用如下代码：12345678910&lt;!DOCTYPE html&gt;&lt;html lang="zh-cn"&gt;&lt;head&gt;&lt;meta charset="UTF-8" /&gt;&lt;title&gt;404&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type="text/javascript" src="//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js" homePageName="返回宝贝回家" homePageUrl="http://www.baobeihuijia.com"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 腾讯寻人空间给出的方法]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
